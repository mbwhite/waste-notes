/// <reference types="node" />
import { default as Stats } from '../core/node_fs_stats';
import { SynchronousFileSystem, FileSystem } from '../core/file_system';
import { File } from '../core/file';
import { FileFlag } from '../core/file_flag';
export default class IsoFS extends SynchronousFileSystem implements FileSystem {
    static isAvailable(): boolean;
    private _data;
    private _pvd;
    private _root;
    private _name;
    constructor(data: Buffer, name?: string);
    getName(): string;
    diskSpace(path: string, cb: (total: number, free: number) => void): void;
    isReadOnly(): boolean;
    supportsLinks(): boolean;
    supportsProps(): boolean;
    supportsSynch(): boolean;
    statSync(p: string, isLstat: boolean): Stats;
    openSync(p: string, flags: FileFlag, mode: number): File;
    readdirSync(path: string): string[];
    /**
     * Specially-optimized readfile.
     */
    readFileSync(fname: string, encoding: string, flag: FileFlag): any;
    private _getDirectoryRecord(path);
    private _getStats(p, record);
}
